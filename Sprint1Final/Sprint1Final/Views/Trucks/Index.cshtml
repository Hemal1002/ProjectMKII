@model PagedList.IPagedList<Sprint1Final.Models.Truck>
@using PagedList.Mvc;
<link href="~/Content/PagedList.css" rel="stylesheet" type="text/css" />

@{
    ViewBag.Title = "Index";
}

<h2>Index</h2>

@using (Html.BeginForm("Index", "Trucks", FormMethod.Get))
{

    <b>Search by : </b> @Html.RadioButton("option", "TruckID")  <text> Truck ID</text>
    @Html.RadioButton("option", "vn") <text>VIN Number</text>  @Html.RadioButton("option", "lp") <text>License Plate</text>
    @Html.RadioButton("option", "ts") <text>Truck status</text> @Html.RadioButton("option", "make") <text>Make</text>
    @Html.RadioButton("option", "ch") <text>Chassis</text>
    @Html.TextBox("Search", ViewBag.CurrentFilter as string); <input type="submit" value="Search" />    <button type="button" onclick="location.href='@Url.Action("Index","Drivers")'">Reset</button>
}

<p>
    @Html.ActionLink("Create New", "Create")
</p>
<table class="table">
    <tr>
        <th>
            @Html.ActionLink("Truck Number", "Index", new { sortOrder = ViewBag.TruckSortParm, currentFilter = ViewBag.CurrentFilter })
        </th>
        <th>
            @Html.ActionLink("VIN Number", "Index", new { sortOrder = ViewBag.TruckSortParm, currentFilter = ViewBag.CurrentFilter })
        </th>
        <th>
           License Plate
        </th>
        <th>
            Truck Statuts
        </th>
        <th>
           Make
        </th>
        <th>
            @Html.ActionLink("Model ", "Index", new { sortOrder = ViewBag.ModelSortParm, currentFilter = ViewBag.CurrentFilter })
        </th>
        <th>
            Chassis
        </th>
        <th>
            Cabin
        </th>
        <th>
            Engine
        </th>
        <th>
            Steering
        </th>
        <th>
           Power
        </th>
        <th>
            Torque
        </th>
        <th>
            Gear Box
        </th>
        <th>
            Tank Cap
        </th>
        <th>
            @Html.ActionLink("Milage ", "Index", new { sortOrder = ViewBag.Mileage, currentFilter = ViewBag.CurrentFilter })
        </th>
        <th>
            @Html.ActionLink("Weight ", "Index", new { sortOrder = ViewBag.Weight, currentFilter = ViewBag.CurrentFilter })
        </th>
        <th>
            Max Load
        </th>
        <th>
            Purchase Date
        </th>
        <th>
            Last Service Date
        </th>
        <th></th>
    </tr>
@if (Model.Count() == 0)
{
    <tr>
        <td colspan="3"> Records not found </td>
    </tr>
}
else
{
    foreach (var item in Model) {
    <tr>
        <td>
            @Html.DisplayFor(modelItem => item.TruckID)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Vin)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.LP)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Tstat)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Make)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Model)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Chassis)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Cabin)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Engine)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Steering)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Powert)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Torque)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.GearBox)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.TankCap)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Milage)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Weight)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.MaxLoad)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.PDate)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.LSD)
        </td>
        <td>
            @Html.ActionLink("Edit", "Edit", new { id = item.TruckID }) |
            @Html.ActionLink("Details", "Details", new { id = item.TruckID }) |
            @Html.ActionLink("Delete", "Delete", new { id = item.TruckID })
        </td>
    </tr>
    }
}
</table>
<br />
Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount

@Html.PagedListPager(Model, page => Url.Action("Index",
    new { page, sortOrder = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilter }))
