
@model PagedList.IPagedList<Sprint1Final.Models.Customer>
@using PagedList.Mvc;
<link href="~/Content/PagedList.css" rel="stylesheet" type="text/css" />


@{
    ViewBag.Title = "Index";
}

<h2>
    Customer table
</h2>
@using (Html.BeginForm("Index", "Customers", FormMethod.Get))
{

    <b>Search by : </b> @Html.RadioButton("option", "CustID")  <text> Customer ID</text>
    @Html.RadioButton("option", "CName") <text>Customer Name</text>  @Html.RadioButton("option", "CNum") <text>Contact Number</text>
    @Html.RadioButton("option", "em") <text>Email</text>
    @Html.TextBox("Search", ViewBag.CurrentFilter as string); <input type="submit" value="Search" />
}

<p>
    @Html.ActionLink("Create New", "Create")
</p>
<table class="table">
    <tr>
        <th>
            @Html.ActionLink("Customer Name", "Index", new { sortOrder = ViewBag.CustNameSortParm, currentFilter = ViewBag.CurrentFilter })
        </th>
        <th>
            Contact Number
        </th>
        <th>
            Address
        </th>
        <th>
            Postal Address
        </th>
        <th>
            Email
        </th>
        <th></th>
    </tr>

@if (Model.Count() == 0)
{
    <tr>
        <td colspan="3"> Records not found </td>
    </tr>
}
else
{

    foreach (var item in Model)
    {
    <tr>
        <td>
            @Html.DisplayFor(modelItem => item.CName)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.ConNum)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Adrs)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.PostAdrs)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Email)
        </td>
        <td>
            @Html.ActionLink("Edit", "Edit", new { id = item.CustomerID }) |
            @Html.ActionLink("Details", "Details", new { id = item.CustomerID }) |
            @Html.ActionLink("Delete", "Delete", new { id = item.CustomerID })
        </td>
    </tr>
    }
}
</table>
<br />
Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount

@Html.PagedListPager(Model, page => Url.Action("Index",
    new { page, sortOrder = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilter }))


