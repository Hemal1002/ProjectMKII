@model PagedList.IPagedList<Sprint1Final.Models.Job>
@using PagedList.Mvc;
<link href="~/Content/PagedList.css" rel="stylesheet" type="text/css" />

@{
    ViewBag.Title = "Index";
}

<h2>Index</h2>

@using (Html.BeginForm("Index", "Jobs", FormMethod.Get))
{

    <b>Search by : </b> @Html.RadioButton("option", "JobID")  <text> Job ID</text>

    @Html.RadioButton("option", "js") <text>Job status</text>
    @Html.RadioButton("option", "jd") <text>Job Driver</text>
    @Html.TextBox("Search", ViewBag.CurrentFilter as string); <input type="submit" value="Search" />
}

<p>
    @Html.ActionLink("Create New", "Create")
</p>
<table class="table">
    <tr>
        <th>
            @Html.ActionLink("Job State", "Index", new { sortOrder = ViewBag.SortStatus, currentFilter = ViewBag.CurrentFilter }) 
        </th>
        <th>
            Start Location
        </th>
        <th>
            Start Time
        </th>
        <th>
            End Location
        </th>
        <th>
           Estimated Time of Arrival
        </th>
        <th>
            @Html.ActionLink("Trip Distance", "Index", new { sortOrder = ViewBag.SortDist, currentFilter = ViewBag.CurrentFilter })
            
        </th>
        <th>
            @Html.ActionLink("Basic Cost", "Index", new { sortOrder = ViewBag.SortCost, currentFilter = ViewBag.CurrentFilter })
            
        </th>
        <th>
            Actual Arrival
        </th>
        <th>
            Cargo Height
        </th>
        <th>
            Cargo Length
        </th>
        <th>
            Cargo Width
        </th>
        <th>
            Cargo Weight
        </th>
        <th>
            Abnormal Load
        </th>
        <th>
            Milage Before
        </th>
        <th>
            Milage After
        </th>
        <th>
            Expected Fuel
        </th>
        <th>
            Actual Fuel
        </th>
        <th>
            @Html.ActionLink("Alert", "Index", new { sortOrder = ViewBag.SortAlert, currentFilter = ViewBag.CurrentFilter })
            
        </th>
        <th>
            Cargo Type
        </th>
        <th>
            Customer Name
        </th>
        <th>
            Driver Name
        </th>
        <th>
           Truck
        </th>
        <th></th>
    </tr>

@if (Model.Count() == 0)
{
    <tr>
        <td colspan="3"> Records not found </td>
    </tr>
}
else
{
    foreach (var item in Model)
    {
    <tr>
        <td>
            @Html.DisplayFor(modelItem => item.jState)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.SLoc)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.STime)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.ELoc)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.ETA)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Dist)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.BasicCost)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.ActArrive)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.CHeight)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.CLength)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.CWidth)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.CWeight)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.AbLoad)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.MBefore)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.MAfter)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.ExpctFuel)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.ActFuel)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Flag)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Cargo.CType)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Customer.CName)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Driver.DName)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Truck.Vin)
        </td>
        <td>
            @Html.ActionLink("Edit", "Edit", new { id = item.JobID }) |
            @Html.ActionLink("Details", "Details", new { id = item.JobID }) |
            @Html.ActionLink("Delete", "Delete", new { id = item.JobID })
        </td>
    </tr>
    }
}
</table>
<br />
Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount

@Html.PagedListPager(Model, page => Url.Action("Index",
    new { page, sortOrder = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilter }))