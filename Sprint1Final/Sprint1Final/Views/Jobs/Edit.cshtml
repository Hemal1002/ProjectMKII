@model Sprint1Final.Models.Job

@{
    ViewBag.Title = "Edit";
}

<h2>Edit</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>Job</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.JobID)

        <div class="form-group">
            @Html.LabelFor(model => model.jState, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.jState, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.jState, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.SLoc, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.SLoc, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.SLoc, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.STime, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.STime, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.STime, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ELoc, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ELoc, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ELoc, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ETA, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ETA, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ETA, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Dist, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Dist, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Dist, "", new { @class = "text-danger" })
            </div>
        </div>
<!--
        <div class="form-group">
            @Html.LabelFor(model => model.BasicCost, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.BasicCost, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.BasicCost, "", new { @class = "text-danger" })
            </div>
        </div>
-->
        <div class="form-group">
            @Html.LabelFor(model => model.ActArrive, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ActArrive, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ActArrive, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CHeight, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.CHeight, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.CHeight, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CLength, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.CLength, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.CLength, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CWidth, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.CWidth, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.CWidth, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CWeight, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.CWeight, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.CWeight, "", new { @class = "text-danger" })
            </div>
        </div>
<!--
        <div class="form-group">
            @Html.LabelFor(model => model.AbLoad, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.AbLoad, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.AbLoad, "", new { @class = "text-danger" })
            </div>
        </div>
-->
        <div class="form-group">
            @Html.LabelFor(model => model.MBefore, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.MBefore, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.MBefore, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.MAfter, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.MAfter, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.MAfter, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ExpctFuel, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ExpctFuel, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ExpctFuel, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ActFuel, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ActFuel, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ActFuel, "", new { @class = "text-danger" })
            </div>
        </div>
<!--
        <div class="form-group">
            @Html.LabelFor(model => model.Flag, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Flag, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Flag, "", new { @class = "text-danger" })
            </div>
        </div>
-->
        <div class="form-group">
            @Html.LabelFor(model => model.TruckID, "TruckID", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("TruckID", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.TruckID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CustomerID, "CustomerID", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("CustomerID", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.CustomerID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CargoID, "CargoID", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("CargoID", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.CargoID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.DriverNo, "DriverNo", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("DriverNo", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.DriverNo, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

<script src="~/Scripts/jquery-1.10.2.min.js"></script>
<script src="~/Scripts/jquery.validate.min.js"></script>
<script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>
